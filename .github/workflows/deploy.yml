# 定义工作流的名称，显示在 GitHub Actions 界面中
name: Deploy VitePress site to Pages

on:
  # 当向 main 分支推送代码时自动触发
  push:
    branches: [main]
  # 允许在 GitHub Actions 界面手动触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read # 允许读取仓库内容
  pages: write # 允许写入 GitHub Pages
  id-token: write # 允许获取身份令牌用于认证

# 控制并发执行策略
# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages # 将部署任务分组为 "pages"
  cancel-in-progress: false # 不取消正在进行的部署任务

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest # 在最新版 Ubuntu 环境中运行
    steps:

      # 步骤1：
      - name: Checkout # 检出代码
        uses: actions/checkout@v4 # 动作获取仓库代码
        with:
          fetch-depth: 0 # 获取完整历史记录（用于 lastUpdated 功能），如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消此区域注释
      #   with:
      #     version: 9
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释

      # 步骤2：
      - name: Setup Node # 设置 Node.js 环境
        uses: actions/setup-node@v4 # 使用 actions/setup-node@v4 动作
        with:
          node-version: 22 # 指定 Node.js 版本为 22
          cache: npm # 启用 npm 缓存优化

      # 步骤3：配置 GitHub Pages 环境
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 步骤4：安装项目依赖，使用 npm ci 进行干净安装
      - name: Install dependencies
        run: npm ci # 或 pnpm install / yarn install / bun install

      # 步骤5：构建 VitePress 站点，执行 npm run docs:build 命令
      - name: Build with VitePress
        run: npm run docs:build # 或 pnpm docs:build / yarn docs:build / bun run docs:build
        env: # 设置环境变量
          TARGET_DEPLOY: github # 设置环境变量 TARGET_DEPLOY 为 'github'

      # 步骤6：上传构建产物
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # 使用 actions/upload-pages-artifact@v3 动作
        with:
          path: docs/.vitepress/dist # 指定构建产物路径为 docs/.vitepress/dist

  # 部署工作
  deploy:
    environment: # 配置部署环境为 GitHub Pages
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build # 指定该作业依赖 build 作业完成
    runs-on: ubuntu-latest # 指定工作流运行的虚拟环境操作系统为最新版本的Ubuntu Linux
    name: Deploy # 作业显示名称

    # 部署步骤：使用 actions/deploy-pages@v4 动作将构建产物部署到 GitHub Pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment # 为步骤分配 ID，用于引用输出变量
        uses: actions/deploy-pages@v4